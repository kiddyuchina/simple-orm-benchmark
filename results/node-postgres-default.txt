cpu: Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz
runtime: node v20.9.0 (x64-linux)

benchmark        time (avg)             (min … max)       p75       p99      p995
--------------------------------------------------- -----------------------------
• PostgreSQL
--------------------------------------------------- -----------------------------
DrizzleORM     1.06 ms/iter   (648.62 µs … 9.14 ms) 989.72 µs   7.37 ms   8.23 ms
KnexJS       708.77 µs/iter   (426.21 µs … 5.77 ms) 753.72 µs   2.66 ms   3.33 ms
Kysely       567.61 µs/iter    (351.31 µs … 4.6 ms) 610.51 µs   2.45 ms   3.66 ms
MikroORM     894.96 µs/iter    (40.9 µs … 11.41 ms) 934.42 µs   3.43 ms   8.88 ms
Pg           450.35 µs/iter   (282.11 µs … 5.86 ms) 472.61 µs   1.98 ms   2.94 ms
Postgres.js  291.42 µs/iter    (168.6 µs … 6.77 ms) 274.61 µs   1.24 ms   2.92 ms
Prisma       error: 
Invalid `prisma.users.findFirst()` invocation:


The provided database string is invalid. The provided arguments are not supported in database URL. Please refer to the documentation in https://www.prisma.io/docs/reference/database-reference/connection-urls for constructing a correct connection string. In some cases, certain characters must be escaped. Please check the string for any illegal characters.
PrismaClientInitializationError: 
Invalid `prisma.users.findFirst()` invocation:


The provided database string is invalid. The provided arguments are not supported in database URL. Please refer to the documentation in https://www.prisma.io/docs/reference/database-reference/connection-urls for constructing a correct connection string. In some cases, certain characters must be escaped. Please check the string for any illegal characters.
    at Cn.handleRequestError (/home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/@prisma/client/runtime/library.js:123:7090)
    at Cn.handleAndLogRequestError (/home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/@prisma/client/runtime/library.js:123:6206)
    at Cn.request (/home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/@prisma/client/runtime/library.js:123:5926)
    at async l (/home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/@prisma/client/runtime/library.js:128:9968)
    at async prismaPostgresGetUser (file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/src/postgres/prisma.ts:9:52)
    at async getUser (file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/src/helpers.ts:1:39)
    at async file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/postgres.bench.ts:11:33
    at async async (file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/mitata/src/lib.mjs:141:7)
    at async run (file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/node_modules/mitata/src/cli.mjs:232:68)
    at async file:///home/runner/work/typescript-orm-benchmark/typescript-orm-benchmark/postgres.bench.ts:15:1
Sequelize    888.81 µs/iter      (532.91 µs … 7 ms) 730.91 µs   5.31 ms    6.5 ms
TypeORM      896.06 µs/iter  (590.11 µs … 10.75 ms) 874.62 µs   2.96 ms   6.41 ms

summary for PostgreSQL
  Postgres.js
   1.55x faster than Pg
   1.95x faster than Kysely
   2.43x faster than KnexJS
   3.05x faster than Sequelize
   3.07x faster than MikroORM
   3.07x faster than TypeORM
   3.64x faster than DrizzleORM
